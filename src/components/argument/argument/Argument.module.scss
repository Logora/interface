@use '~@logora/debate.styles.spacing/_spacing.scss' as spacing;
@use '~@logora/debate.styles.theme/_theme.scss' as theme;
@use "~@logora/debate.styles.flex/_flex.scss" as flex;
@use '~@logora/debate.styles.display/_display.scss' as display;


.argument {
	border-radius: theme.$box-border-radius;
	box-shadow: theme.$box-shadow;
	transition: margin-top 2s;
	border: theme.$box-border;
	scroll-margin-top: 150px;
	background-color: theme.$background-color-primary;
	@include spacing.p(3, xs);
	display: flex;
	flex-direction: column;
	gap: spacing.$spacer;
}

.edited {
	font-size: theme.$font-size-extra-small;
	color: theme.$text-secondary;
	line-height: theme.$line-height-loose;
	@include spacing.mb(1.5, xs);
}

.argumentReply {
	position: relative;
	background-color: theme.$text-tertiary;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	box-shadow: theme.$box-shadow;
	border-top-right-radius: theme.$box-border-radius;
	border-bottom-right-radius: theme.$box-border-radius;
	border-left: 6px solid;
	border-left-color: theme.$call-primary !important;

	&.position-1 {
		border-left-color: theme.$for-primary !important;
	}

	&.position-2 {
		border-left-color: theme.$against-primary !important;
	}

	&.position-3 {
		border-left-color: theme.$third-position-color-primary !important;
	}

	@for $i from 1 through 5 {
		&.level-#{$i} {
			margin-left: #{$i}em !important;
		}
	}

	&::before {
		content: "";
		border-left: 4px solid theme.$text-secondary;
		position: absolute;
		width: 4px;
		height: 10px;
		top: -10px;
		left: 2em;
	}

	@include display.media-breakpoint-down(xs) {
		border-left: 4px solid;
	}
}

.flash {
	-webkit-transition: box-shadow 0.8s ease-in-out;
	-moz-transition: box-shadow 0.8s ease-in-out;
	-o-transition: box-shadow 0.8s ease-in-out;
	transition: box-shadow 0.8s ease-in-out;
	box-shadow: -4px 4px 15px 3px rgba(0, 0, 0, 0.15);
}

.position-1.flash {
	border-color: theme.$for-primary;
}

.position-2.flash {
	border-color: theme.$against-primary;
}

.position-3.flash {
	border-color: theme.$third-position-color-primary;
	@include spacing.mt(2, xs);
}

.argumentBody {
	font-size: theme.$font-size-normal;
	line-height: theme.$line-height-loose;
}

.argumentDeletedBody {
	font-size: theme.$font-size-small;
	color: theme.$text-secondary;
}

.fixedHeight {
	height: 100px;
	overflow: hidden;
	position: relative;

	&:after {
		content: "";
		position: absolute;
		z-index: 1;
		bottom: 0;
		left: 0;
		right: 0;
		pointer-events: none;
		background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 90%);
		width: 100%;
		height: 5em;
	}
}

.argumentContent {
	line-height: theme.$line-height-loose;
	overflow-wrap: break-word;

	& * {
		font-size: theme.$font-size-normal;
	}
}

.argumentSourcesList {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: flex-start;
	font-size: theme.$font-size-extra-small;
	font-weight: theme.$font-weight-normal;
}

.argumentSourcesList a {
	text-decoration: none;
}

.repliesList {
	@include spacing.mt(2, xs);
}

.readMoreLink {
	@include spacing.mt(2.5, xs);
	display: flex;
	justify-content: center;
}

.replyTo {
	@include spacing.pb(2, xs);
	@include display.display(flex, xs);
	@include flex.flex-direction(row, xs);
	@include flex.align-items(flex-start, xs);
	font-size: theme.$font-size-extra-small;
	color: theme.$text-secondary;
	cursor: pointer;
	overflow: hidden;
	white-space: nowrap;

	span {
		@include spacing.pl(1, xs);
		cursor: pointer;
		text-decoration: underline;
	}

	svg {
		padding: 2px 0 0 2px;
		fill: theme.$text-secondary;
	}
}

.replyingTo {
	display: flex !important;
}

.headerPosition-0 {
	background-color: theme.$call-primary !important;
}

.headerPosition-1 {
	background-color: theme.$for-primary !important;
}

.headerPosition-2 {
	background-color: theme.$against-primary !important;
}

.headerPosition-3 {
	background-color: theme.$third-position-color-primary !important;
}

.voteButtonPosition-1 {
	color: theme.$for-primary !important;

	& svg {
		fill: theme.$for-primary !important;
	}
}

.voteButtonPosition-2 {
	color: theme.$against-primary !important;

	& svg {
		fill: theme.$against-primary !important;
	}
}

.voteButtonPosition-3 {
	color: theme.$third-position-color-primary !important;

	& svg {
		fill: theme.$third-position-color-primary !important;
	}
}


@media (prefers-color-scheme: dark) {
	.replyStyle {
		background-color: theme.$text-tertiary;
	}

	.argumentStyle {
		background-color: theme.$background-color-primary;
	}
}