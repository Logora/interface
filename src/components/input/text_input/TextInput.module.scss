@use '@logora/debate.styles.theme/_theme.scss' as *;
@use '@logora/debate.styles.spacing/_spacing.scss' as *;

.container {
  position: relative;

  // by default, the label shows at the top left corner of the input
  label {
    color: $text-secondary;
    pointer-events: none;
    transition: left 300ms, top 300ms, font-size 300ms, padding-top 300ms, transform 300ms, color 300ms,
      background-color 300ms ease-in-out;
    font-size: 0.8rem;
    position: absolute;
    top: -0.6em;
    left: $spacer-md;
    z-index: 1;
    background-color: $background-color-primary;
    transform: unset;
    padding: 0 $spacer-xxs;
  }
}

.textInput {
  width: 100%;
  box-sizing: border-box;
  outline: 0;
  @include px(3, xs);
  @include py(2.5, xs);
  font-size: inherit;
  font-family: inherit;
  border: $box-border;
  border-radius: $box-border-radius;
  background-color: $background-color-primary;
  color: $text-primary;

  // when no content in the input and not focused, display the label as the placeholder
  &:placeholder-shown:not(:focus) {
    &~label {
      transition: top 300ms, font-size 300ms, padding-top 300ms, transform 300ms, color 300ms ease-in-out;
      top: 50%;
      transform: translateY(-50%);
      font-size: 1em;
      background-color: unset;
    }
  }

  // keep precedence! filled < hover < success < error < disabled
  &.filled {
    background-color: $background-color-secondary;
  }

  &::placeholder {
    color: $text-secondary;
  }

  &:hover {
    border: 1px solid $text-secondary;
  }

  &:focus {
    border: 1px solid $text-secondary !important;
    background-color: $background-color-primary;

    &~label {
      color: $text-secondary !important;
    }
  }

  &.success {
    border: 1px solid $success-primary !important;

    &~label {
      color: $success-primary;
    }
  }

  &.error {
    border: 1px solid $cancel-primary !important;

    &~label {
      color: $cancel-primary;
    }
  }

  &:disabled {
    cursor: not-allowed;
    background-color: $text-tertiary;
    border: 1px solid $darken-text-tertiary;

    &~label {
      color: $darkest-text-tertiary;
    }
  }
}

.textInputWithRightIcon {
  position: relative;
  font-size: inherit;

  .textInput {
    padding-right: 2em !important;
  }

  // right icon element
  > :last-child {
    font-size: inherit;
    color: inherit;
    position: absolute;
    right: $spacer-md;
    top: calc(50% - 0.6rem);
    width: 16px;
  }
}

.textInputWithLeftIcon {
  position: relative;
  font-size: inherit;

  .textInput {
    padding-left: 2em !important;

    &:placeholder-shown:not(:focus) {
      &~label {
        left: var(--spacer-md, calc(var(--space-unit, 1em) * 2));
      }
    }
  }

  // left icon element
  > :first-child {
    font-size: inherit;
    color: inherit;
    position: absolute;
    left: $spacer-md;
    top: calc(50% - 0.6rem);
    width: 16px;
    height: 16px;
  }
}

.errorMessage {
  font-size: 0.8em;
  padding-top: $spacer-md;
  color: $cancel-primary;
}
