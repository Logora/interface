@use "sass:map";
@use '@logora/debate.styles.display/_display.scss' as *;

$spacer: var(--space-unit, 1em) !default;
$spacer-xxs: var(--spacer-xxs, calc($spacer * .25));
$spacer-xs: var(--spacer-xs, calc($spacer * .325));
$spacer-sm: var(--spacer-sm, calc($spacer * .5));
$spacer-md: var(--spacer-md, calc($spacer * .75));
$spacer-lg: var(--spacer-lg, calc($spacer * 1.5));
$spacer-xl: var(--spacer-xl, calc($spacer * 3));
$spacers: () !default;
$spacers: map.merge(
        (
                0: 0,
                1: $spacer-xxs,
                1.5: $spacer-xs,
                2: $spacer-sm,
                2.5: $spacer-md,
                3: $spacer,
                4: $spacer-lg,
                5: $spacer-xl
        ),
        $spacers
);
$title-spacing: var(--title-spacing, $spacer);
$title-spacing-lg: var(--title-spacing-lg, $spacer-lg);
$box-spacing: var(--box-spacing, $spacer);
$box-element-spacing: var(--box-element-spacing, $spacer-lg);

@mixin m($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    margin: map.get($spacers, $value) !important;
  }
}

@mixin mt($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    margin-top: map.get($spacers, $value) !important;
  }
}

@mixin ml($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    margin-left: map.get($spacers, $value) !important;
  }
}

@mixin mb($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    margin-bottom: map.get($spacers, $value) !important;
  }
}

@mixin mr($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    margin-right: map.get($spacers, $value) !important;
  }
}

@mixin my($value, $breakpoint) {
  @include mt($value, $breakpoint);
  @include mb($value, $breakpoint);
}

@mixin mx($value, $breakpoint) {
  @include mr($value, $breakpoint);
  @include ml($value, $breakpoint);
}

// PADDINGS

@mixin p($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    padding: map.get($spacers, $value) !important;
  }
}

@mixin pt($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    padding-top: map.get($spacers, $value) !important;
  }
}

@mixin pl($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    padding-left: map.get($spacers, $value) !important;
  }
}

@mixin pb($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    padding-bottom: map.get($spacers, $value) !important;
  }
}

@mixin pr($value, $breakpoint) {
  @include media-breakpoint-up($breakpoint) {
    padding-right: map.get($spacers, $value) !important;
  }
}

@mixin py($value, $breakpoint) {
  @include pt($value, $breakpoint);
  @include pb($value, $breakpoint);
}

@mixin px($value, $breakpoint) {
  @include pr($value, $breakpoint);
  @include pl($value, $breakpoint);
}

// AUTO MARGINS

@mixin mt-auto($breakpoint) {
  margin-top: auto !important;
}

@mixin mb-auto($breakpoint) {
  margin-bottom: auto !important;
}

@mixin mr-auto($breakpoint) {
  margin-right: auto !important;
}

@mixin ml-auto($breakpoint) {
  margin-left: auto !important;
}

@mixin mx-auto($breakpoint) {
  @include mr-auto($breakpoint);
  @include ml-auto($breakpoint);
}

@mixin my-auto($breakpoint) {
  @include mt-auto($breakpoint);
  @include mb-auto($breakpoint);
}
