@use '@logora/debate.styles.spacing/_spacing.scss' as *;
@use '@logora/debate.styles.theme/_theme.scss' as *;
@use '@logora/debate.styles.flex/_flex.scss' as *;
@use '@logora/debate.styles.display/_display.scss' as *;

.container {
    @include display(flex, xs);
    @include flex-direction(column, xs);
    @include flex-direction(row, sm);
    @include align-items(flex-start, sm);
    @include align-items(center, xs);
    @include mb(4, xs);
}

.nameContainer {
    display: flex;
    flex-direction: row;
    @include display(flex, xs);
    @include flex-direction(column, xs);
    @include flex-direction(row, sm);
    @include align-items(flex-start, sm);
    @include justify-content(center, xs);
    @include justify-content(flex-start, sm);
    gap: $spacer;
    
}

.inputsContainer {
    margin-left: $spacer-xl;
    display: flex;
    flex-direction: column;
    gap: $spacer;
    @include media-breakpoint-down(xs) {
        margin-left: 0;
        margin-top: $spacer-xl;
    }
}

.hint {
    width: 100%;
    font-size: $font-size-small;
    color: $text-secondary;
}

.langSelect {
    width: 100%;
}

.textArea {
    width: 100%;
    height: 100px;
    width: 100%;
    box-sizing: border-box;
    outline: 0;
    padding: 0.69em 1em;
    font-size: inherit;
    font-family: inherit;
    border: $box-border;
    box-shadow: $box-shadow;
    border-radius: $box-border-radius;
    background-color: $background-color-primary;
    color: $text-primary;

    // when no content in the input and not focused, display the label as the placeholder
    &:placeholder-shown:not(:focus) {
        & ~ label {
        transition: top 300ms, font-size 300ms, padding-top 300ms, transform 300ms, color 300ms ease-in-out;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1em;
        background-color: unset;
        }
    }

    // keep precedence! filled < hover < success < error < disabled
    &.filled {
        background-color: $background-color-secondary;
    }
    &::placeholder {
        color: $text-secondary;
    }
    &:hover {
        border: 1px solid $text-secondary;
    }
    &:focus {
        border: 1px solid $text-secondary !important;
        background-color: $background-color-primary;
        & ~ label {
        color: $text-secondary !important;
        }
    }

    &.success {
        border: 1px solid $success-primary !important;
        & ~ label {
        color: $success-primary;
        }
    }
    &.error {
        border: 1px solid $cancel-primary !important;
        & ~ label {
        color: $cancel-primary;
        }
    }
    &:disabled {
        cursor: not-allowed;
        background-color: $text-tertiary;
        border: 1px solid $darken-text-tertiary;
        & ~ label {
        color: $darkest-text-tertiary;
        }
    }
}

.userSaveBox {
    float: right;
}

.dialog {
    margin-bottom: $spacer;
}

.userSaveBox {
    margin-top: $spacer;
}

// PROFILE PICTURE
.userPictureUpload {
    width: 160px;
    height: 160px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #666;
    border-radius: 50%;
    margin-bottom: $spacer;
    object-fit: cover;
    @include media-breakpoint-down(xs) {
        width: 80px;
        height: 80px;
    }
}

.userImageContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.formFooterTerms {
    @include mt(3, xs);
    font-size: $font-size-small;
    text-align: center;
}

.termsLink {
    color: $call-primary !important;
}

.backButton {
    width: max-content;
    margin-top: $spacer-xl;
    border-bottom: 1px solid $text-secondary;
    cursor: pointer;
}

.toggle {
    @include mt(3, xs);
    color: $text-primary;
}

.toggle .cgu {
    color: $text-primary;
    font-weight: $font-weight-bold;
    text-decoration: underline !important;
}

.required {
    color: $cancel-primary;
    @include mt(3, xs);
    font-size: $font-size-small;
}

